!function(n){"use strict";class t{constructor(n){this.isOpen=!1,this.isTyping=!1,this.suggestionsShown=!1,this.bubble=null,this.chatWindow=null,this.messagesContainer=null,this.input=null,this.sendBtn=null,this.config={webhookUrl:"https://n8n.prismia.be/webhook/shopify-chatbot",welcomeMessage:"Bonjour ! Comment puis-je vous aider aujourd'hui ?",primaryColor:"#E56E94",secondaryColor:"#B76465",...n},this.sessionId=this.generateSessionId()}generateSessionId(){return"undefined"!=typeof crypto&&crypto.randomUUID?crypto.randomUUID():Date.now().toString(36)+Math.random().toString(36).substr(2,9)}hexToRgba(n,t){return`rgba(${parseInt(n.slice(1,3),16)}, ${parseInt(n.slice(3,5),16)}, ${parseInt(n.slice(5,7),16)}, ${t})`}xmlToProductList(n){const t=n.replace(/&(?![a-zA-Z0-9#]{1,6};)/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/&lt;(\/?[a-zA-Z_][a-zA-Z0-9_]*.*?)&gt;/g,"<$1>"),e=(new DOMParser).parseFromString(t,"text/xml"),o=e.querySelector("parsererror");if(o)throw new Error("Erreur lors du parsing XML: "+o.textContent);const s=e.querySelectorAll("product");return Array.from(s).map(n=>{var t,e,o,s,a;return{handle:(null==(t=n.querySelector("handle"))?void 0:t.textContent)||"",title:(null==(e=n.querySelector("title"))?void 0:e.textContent)||"",vendor:(null==(o=n.querySelector("vendor"))?void 0:o.textContent)||"",price:parseFloat((null==(s=n.querySelector("price"))?void 0:s.textContent)||"0"),image_src:(null==(a=n.querySelector("image_src"))?void 0:a.textContent)||""}})}async loadMarkdownIt(){return new Promise(n=>{if(window.markdownit)return this.md=window.markdownit({html:!0,linkify:!0,typographer:!0,breaks:!0}),void n();const t=document.createElement("script");t.src="https://cdn.jsdelivr.net/npm/markdown-it@13.0.1/dist/markdown-it.min.js",t.onload=()=>{this.md=window.markdownit({html:!0,linkify:!0,typographer:!0,breaks:!0}),n()},document.head.appendChild(t)})}generateStyles(){const{primaryColor:n,secondaryColor:t}=this.config;return`\n      .chatbot-container {\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        z-index: 9999;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n      }\n\n      .chatbot-bubble {\n        width: 60px;\n        height: 60px;\n        background: linear-gradient(135deg, ${n} 0%, ${t} 100%);\n        border-radius: 50%;\n        cursor: pointer;\n        box-shadow: 0 4px 12px rgba(229, 110, 148, 0.25);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: transform 0.3s ease, box-shadow 0.3s ease;\n      }\n\n      .chatbot-bubble:hover {\n        transform: scale(1.05);\n        box-shadow: 0 6px 16px rgba(229, 110, 148, 0.35);\n      }\n\n      .chatbot-bubble svg {\n        width: 30px;\n        height: 30px;\n        fill: white;\n      }\n\n      .chatbot-window {\n        position: absolute;\n        bottom: 80px;\n        right: 0;\n        width: 450px;\n        height: 650px;\n        background: white;\n        border-radius: 16px;\n        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);\n        display: none;\n        flex-direction: column;\n        overflow: hidden;\n      }\n\n      @media (min-width: 768px) {\n        .chatbot-window {\n          width: 500px;\n          height: 700px;\n        }\n      }\n\n      .chatbot-window.open {\n        display: flex;\n        animation: slideUp 0.3s ease;\n      }\n\n      @keyframes slideUp {\n        from {\n          opacity: 0;\n          transform: translateY(20px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n\n      .chatbot-header {\n        background: linear-gradient(135deg, ${n} 0%, ${t} 100%);\n        color: white;\n        padding: 20px;\n        display: flex;\n        align-items: center;\n        gap: 12px;\n      }\n\n      .chatbot-profile-img {\n        width: 40px;\n        height: 40px;\n        border-radius: 50%;\n      }\n\n      .chatbot-header-info {\n        flex: 1;\n      }\n\n      .chatbot-header-title {\n        font-weight: 600;\n        font-size: 16px;\n        margin: 0;\n      }\n\n      .chatbot-header-status {\n        font-size: 12px;\n        opacity: 0.9;\n        margin: 0;\n      }\n\n      .chatbot-close {\n        background: none;\n        border: none;\n        color: white;\n        cursor: pointer;\n        padding: 4px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border-radius: 4px;\n        transition: background 0.2s ease;\n      }\n\n      .chatbot-close:hover {\n        background: rgba(255, 255, 255, 0.2);\n      }\n\n      .chatbot-close svg {\n        width: 20px;\n        height: 20px;\n        fill: white;\n      }\n\n      .chatbot-close:focus {\n        outline: 2px solid rgba(255, 255, 255, 0.5);\n        outline-offset: 2px;\n      }\n\n      .chatbot-messages {\n        flex: 1;\n        overflow-y: auto;\n        padding: 20px;\n        display: flex;\n        flex-direction: column;\n        gap: 12px;\n      }\n\n      .chatbot-message {\n        max-width: 80%;\n        padding: 12px 16px;\n        border-radius: 16px;\n        word-wrap: break-word;\n        animation: fadeIn 0.3s ease;\n      }\n\n      @keyframes fadeIn {\n        from {\n          opacity: 0;\n          transform: translateY(10px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n\n      .chatbot-message.bot {\n        background: #F5F5F5;\n        align-self: flex-start;\n        border-bottom-left-radius: 4px;\n        color: #333;\n      }\n\n      .chatbot-message.bot h1, .chatbot-message.bot h2, .chatbot-message.bot h3 {\n        margin-top: 0;\n        margin-bottom: 8px;\n      }\n\n      .chatbot-message.bot p {\n        margin: 8px 0;\n      }\n\n      .chatbot-message.bot ul, .chatbot-message.bot ol {\n        margin: 8px 0;\n        padding-left: 20px;\n      }\n\n      .chatbot-message.bot code {\n        background: rgba(0, 0, 0, 0.05);\n        padding: 2px 4px;\n        border-radius: 3px;\n        font-family: 'Courier New', monospace;\n        font-size: 0.9em;\n      }\n\n      .chatbot-message.bot pre {\n        background: rgba(0, 0, 0, 0.05);\n        padding: 12px;\n        border-radius: 6px;\n        overflow-x: auto;\n        margin: 8px 0;\n      }\n\n      .chatbot-message.bot pre code {\n        background: none;\n        padding: 0;\n      }\n\n      .chatbot-message.bot a {\n        color: ${n};\n        text-decoration: none;\n      }\n\n      .chatbot-message.bot a:hover {\n        text-decoration: underline;\n      }\n\n      .chatbot-message.bot blockquote {\n        border-left: 4px solid ${n};\n        margin: 8px 0;\n        padding-left: 16px;\n        color: #666;\n      }\n\n      .chatbot-message.bot table {\n        border-collapse: collapse;\n        margin: 8px 0;\n        width: 100%;\n      }\n\n      .chatbot-message.bot th, .chatbot-message.bot td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: left;\n      }\n\n      .chatbot-message.bot th {\n        background: #f5f5f5;\n        font-weight: 600;\n      }\n\n      .chatbot-message.user {\n        background: linear-gradient(135deg, ${n} 0%, ${t} 100%);\n        color: white;\n        align-self: flex-end;\n        border-bottom-right-radius: 4px;\n      }\n\n      .chatbot-message.suggestion {\n        background: ${this.hexToRgba(n,.1)};\n        color: #333;\n        align-self: flex-start;\n        border: 1px solid ${this.hexToRgba(n,.2)};\n        cursor: pointer;\n        transition: all 0.2s ease;\n      }\n\n      .chatbot-message.suggestion:hover {\n        background: ${this.hexToRgba(n,.15)};\n        border-color: ${this.hexToRgba(n,.4)};\n        transform: translateX(2px);\n      }\n\n      .chatbot-input-container {\n        padding: 16px;\n        border-top: 1px solid #E0E0E0;\n        display: flex;\n        gap: 12px;\n        align-items: center;\n      }\n\n      .chatbot-input {\n        flex: 1;\n        border: 1px solid #E0E0E0;\n        border-radius: 24px;\n        padding: 12px 20px;\n        font-size: 14px;\n        outline: none;\n        transition: border-color 0.2s ease;\n      }\n\n      .chatbot-input:focus {\n        border-color: ${n};\n      }\n\n      .chatbot-send {\n        background: linear-gradient(135deg, ${n} 0%, ${t} 100%);\n        border: none;\n        border-radius: 50%;\n        width: 40px;\n        height: 40px;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: transform 0.2s ease;\n      }\n\n      .chatbot-send:hover {\n        transform: scale(1.05);\n      }\n\n      .chatbot-send:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n\n      .chatbot-send svg {\n        width: 20px;\n        height: 20px;\n        fill: white;\n      }\n\n      .chatbot-typing {\n        display: flex;\n        gap: 4px;\n        padding: 16px;\n        background: #F5F5F5;\n        border-radius: 16px;\n        align-self: flex-start;\n        border-bottom-left-radius: 4px;\n      }\n\n      .chatbot-typing span {\n        width: 8px;\n        height: 8px;\n        background: #999;\n        border-radius: 50%;\n        animation: typing 1.4s infinite;\n      }\n\n      .chatbot-typing span:nth-child(2) {\n        animation-delay: 0.2s;\n      }\n\n      .chatbot-typing span:nth-child(3) {\n        animation-delay: 0.4s;\n      }\n\n      @keyframes typing {\n        0%, 60%, 100% {\n          transform: translateY(0);\n        }\n        30% {\n          transform: translateY(-10px);\n        }\n      }\n\n      @media (max-width: 768px) {\n        .chatbot-window {\n          width: 100vw;\n          height: 100vh;\n          height: 100dvh;\n          bottom: 0;\n          right: 0;\n          top: 0;\n          left: 0;\n          border-radius: 0;\n          position: fixed;\n          z-index: 10000;\n        }\n\n        .chatbot-header {\n          padding: 20px 16px;\n          padding-top: max(20px, env(safe-area-inset-top));\n        }\n\n        .chatbot-close {\n          background: rgba(255, 255, 255, 0.2);\n          border-radius: 8px;\n          padding: 8px;\n          min-width: 44px;\n          min-height: 44px;\n        }\n\n        .chatbot-messages {\n          padding: 16px;\n          padding-bottom: max(16px, env(safe-area-inset-bottom));\n        }\n\n        .chatbot-input-container {\n          padding: 16px;\n        }\n\n        .chatbot-footer {\n          padding: 8px 16px;\n          padding-bottom: max(8px, env(safe-area-inset-bottom));\n        }\n\n        .chatbot-bubble {\n          bottom: 16px;\n          right: 16px;\n        }\n\n        .chatbot-window.open {\n          overflow: hidden;\n        }\n      }\n\n      @media (max-width: 400px) {\n        .chatbot-header {\n          padding: 16px 12px;\n          padding-top: max(16px, env(safe-area-inset-top));\n        }\n\n        .chatbot-messages {\n          padding: 12px;\n        }\n\n        .chatbot-input-container {\n          padding: 12px;\n          padding-bottom: max(12px, env(safe-area-inset-bottom));\n        }\n\n        .chatbot-header-title {\n          font-size: 15px;\n        }\n\n        .chatbot-header-status {\n          font-size: 11px;\n        }\n      }\n\n      .products-carousel {\n        display: flex;\n        gap: 12px;\n        overflow-x: auto;\n        padding: 12px 0;\n        margin: 12px 0;\n        scroll-behavior: smooth;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      .products-carousel::-webkit-scrollbar {\n        height: 6px;\n      }\n\n      .products-carousel::-webkit-scrollbar-track {\n        background: #f1f1f1;\n        border-radius: 3px;\n      }\n\n      .products-carousel::-webkit-scrollbar-thumb {\n        background: ${n};\n        border-radius: 3px;\n      }\n\n      .product-card {\n        flex: 0 0 200px;\n        background: white;\n        border-radius: 12px;\n        overflow: hidden;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n        transition: transform 0.2s ease, box-shadow 0.2s ease;\n        cursor: pointer;\n      }\n\n      .product-card:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n      }\n\n      .product-image {\n        width: 100%;\n        height: 200px;\n        object-fit: cover;\n        background: #f5f5f5;\n      }\n\n      .product-info {\n        padding: 12px;\n      }\n\n      .product-title {\n        font-size: 14px;\n        font-weight: 600;\n        color: #333;\n        margin: 0 0 4px 0;\n        display: -webkit-box;\n        -webkit-line-clamp: 2;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        line-height: 1.3;\n        min-height: 36px;\n      }\n\n      .product-vendor {\n        font-size: 12px;\n        color: #666;\n        margin: 0 0 8px 0;\n      }\n\n      .product-price {\n        font-size: 16px;\n        font-weight: 700;\n        color: ${n};\n        margin: 0 0 12px 0;\n      }\n\n      .product-button {\n        display: block;\n        width: 100%;\n        padding: 8px 16px;\n        background: linear-gradient(135deg, ${n} 0%, ${t} 100%);\n        color: white !important;\n        border: none;\n        border-radius: 6px;\n        font-size: 14px;\n        font-weight: 500;\n        cursor: pointer;\n        transition: transform 0.2s ease, box-shadow 0.2s ease;\n        text-align: center;\n        text-decoration: none !important;\n      }\n\n      .product-button:hover {\n        transform: translateY(-1px);\n        box-shadow: 0 2px 8px rgba(229, 110, 148, 0.3);\n      }\n\n      .carousel-navigation {\n        display: flex;\n        justify-content: center;\n        gap: 8px;\n        margin-top: 12px;\n      }\n\n      .carousel-nav-button {\n        width: 32px;\n        height: 32px;\n        border-radius: 50%;\n        background: #f5f5f5;\n        border: none;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: background 0.2s ease;\n      }\n\n      .carousel-nav-button:hover {\n        background: #FFE6E8;\n      }\n\n      .carousel-nav-button svg {\n        width: 16px;\n        height: 16px;\n        fill: #666;\n      }\n\n      .carousel-nav-button:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n\n      .chatbot-footer {\n        padding: 8px 16px;\n        text-align: center;\n        border-top: 1px solid #E0E0E0;\n        background: #f8f9fa;\n      }\n\n      .chatbot-powered-by {\n        font-size: 11px;\n        color: #666;\n        text-decoration: none;\n        transition: color 0.2s ease;\n      }\n\n      .chatbot-powered-by:hover {\n        color: ${n};\n        text-decoration: none;\n      }\n    `}createHTML(){return`\n      <div class="chatbot-container">\n        <div class="chatbot-bubble" id="chatbot-bubble">\n          <svg viewBox="0 0 24 24">\n            <path d="M12 2C6.48 2 2 6.48 2 12c0 1.54.36 3 .97 4.29L1 23l6.71-1.97C9 21.64 10.46 22 12 22c5.52 0 10-4.48 10-10S17.52 2 12 2zm0 18c-1.41 0-2.73-.36-3.88-.99l-.28-.15-2.9.85.85-2.9-.15-.28C4.36 14.73 4 13.41 4 12c0-4.41 3.59-8 8-8s8 3.59 8 8-3.59 8-8 8z"/>\n            <circle cx="8.5" cy="12" r="1"/>\n            <circle cx="12" cy="12" r="1"/>\n            <circle cx="15.5" cy="12" r="1"/>\n          </svg>\n        </div>\n        <div class="chatbot-window" id="chatbot-window">\n          <div class="chatbot-header">\n            <img src="https://www.google.com/s2/favicons?domain=${this.config.domain}&sz=256" alt="Chatbot" class="chatbot-profile-img">\n            <div class="chatbot-header-info">\n              <h3 class="chatbot-header-title">${this.config.companyName} Personal Shopper</h3>\n              <p class="chatbot-header-status">En ligne</p>\n            </div>\n            <button class="chatbot-close" id="chatbot-close">\n              <svg viewBox="0 0 24 24">\n                <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>\n              </svg>\n            </button>\n          </div>\n          <div class="chatbot-messages" id="chatbot-messages">\n            <div class="chatbot-message bot">${this.config.welcomeMessage}</div>\n          </div>\n          <div class="chatbot-input-container">\n            <input type="text" class="chatbot-input" id="chatbot-input" placeholder="Écrivez votre message...">\n            <button class="chatbot-send" id="chatbot-send">\n              <svg viewBox="0 0 24 24">\n                <path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z"/>\n              </svg>\n            </button>\n          </div>\n          <div class="chatbot-footer">\n            <a href="https://prismia.be?utm_source=chatbot&utm_medium=widget&utm_campaign=powered_by" target="_blank" class="chatbot-powered-by">\n              Powered by Prismia\n            </a>\n          </div>\n        </div>\n      </div>\n    `}async init(){await this.loadMarkdownIt();const n=document.createElement("style");n.textContent=this.generateStyles(),document.head.appendChild(n);const t=document.createElement("div");t.innerHTML=this.createHTML(),document.body.appendChild(t),this.bubble=document.getElementById("chatbot-bubble"),this.chatWindow=document.getElementById("chatbot-window"),this.messagesContainer=document.getElementById("chatbot-messages"),this.input=document.getElementById("chatbot-input"),this.sendBtn=document.getElementById("chatbot-send"),this.attachEventListeners(),window.toggleChatbot=()=>this.toggleChatbot(),window.addMessageToChat=(n,t=!1)=>this.addMessage(n,t)}attachEventListeners(){if(!this.bubble||!this.input||!this.sendBtn)return;this.bubble.addEventListener("click",()=>this.toggleChatbot());const n=document.getElementById("chatbot-close");null==n||n.addEventListener("click",()=>this.toggleChatbot()),this.sendBtn.addEventListener("click",()=>{this.sendMessage(this.input.value)}),this.input.addEventListener("keypress",n=>{"Enter"===n.key&&this.sendMessage(this.input.value)})}toggleChatbot(){if(this.chatWindow){if(this.isOpen=!this.isOpen,this.chatWindow.classList.toggle("open",this.isOpen),window.innerWidth<=768)if(this.isOpen)document.body.style.overflow="hidden",document.body.style.position="fixed",document.body.style.width="100%",document.body.style.top=`-${window.scrollY}px`;else{const n=document.body.style.top;document.body.style.overflow="",document.body.style.position="",document.body.style.width="",document.body.style.top="",n&&window.scrollTo(0,-1*parseInt(n||"0"))}this.isOpen&&!this.suggestionsShown&&setTimeout(()=>{this.showSuggestions(),this.suggestionsShown=!0},500)}}showSuggestions(){this.config.quickQuestions&&this.messagesContainer&&this.config.quickQuestions.forEach((n,t)=>{setTimeout(()=>{const t=document.createElement("div");t.className="chatbot-message suggestion",t.textContent=n,t.onclick=()=>{this.sendMessage(n)},this.messagesContainer.appendChild(t),this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight},100*t)})}addMessage(n,t=!1){if(!this.messagesContainer)return;const e=document.createElement("div");if(e.className="chatbot-message "+(t?"bot":"user"),t){const t=n.match(/<products>([\s\S]*?)<\/products>/);if(t){const s=t[0],a=n.replace(s,"").trim();a&&(e.innerHTML=this.md.render(a),this.messagesContainer.appendChild(e));try{const n=this.xmlToProductList(s);this.createProductCarousel(n)}catch(o){e.innerHTML=this.md.render(n),this.messagesContainer.appendChild(e)}}else e.innerHTML=this.md.render(n),this.messagesContainer.appendChild(e)}else e.textContent=n,this.messagesContainer.appendChild(e);this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight}createProductCarousel(n){if(!this.messagesContainer)return;const t=document.createElement("div");t.className="chatbot-message bot";const e=document.createElement("div");if(e.className="products-carousel",e.id=`carousel-${Date.now()}`,n.forEach(n=>{const t=document.createElement("div");t.className="product-card",t.innerHTML=`\n        <img src="${n.image_src}" alt="${n.image_alt_text||n.title}" class="product-image" loading="lazy">\n        <div class="product-info">\n          <h4 class="product-title">${n.title}</h4>\n          <p class="product-vendor">${n.vendor}</p>\n          <p class="product-price">${n.price}€</p>\n          <a href="https://${this.config.domain}/products/${n.handle}" \n             target="_blank" \n             class="product-button"\n             onclick="event.stopPropagation()">\n            Voir l'article\n          </a>\n        </div>\n      `,e.appendChild(t)}),t.appendChild(e),n.length>2){const n=document.createElement("div");n.className="carousel-navigation";const o=document.createElement("button");o.className="carousel-nav-button",o.innerHTML='<svg viewBox="0 0 24 24"><path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"/></svg>',o.onclick=()=>this.scrollCarousel(e,-200);const s=document.createElement("button");s.className="carousel-nav-button",s.innerHTML='<svg viewBox="0 0 24 24"><path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"/></svg>',s.onclick=()=>this.scrollCarousel(e,200),n.appendChild(o),n.appendChild(s),t.appendChild(n)}this.messagesContainer.appendChild(t),this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight}scrollCarousel(n,t){n.scrollBy({left:t,behavior:"smooth"})}showTyping(){if(!this.messagesContainer)return;const n=document.createElement("div");n.className="chatbot-typing",n.id="typing-indicator",n.innerHTML="<span></span><span></span><span></span>",this.messagesContainer.appendChild(n),this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight}hideTyping(){const n=document.getElementById("typing-indicator");n&&n.remove()}async sendMessage(n){if(!n.trim()||this.isTyping||!this.input||!this.sendBtn||!this.messagesContainer)return;this.messagesContainer.querySelectorAll(".chatbot-message.suggestion").forEach(n=>{n.style.display="none"}),this.addMessage(n),this.input.value="",this.isTyping=!0,this.sendBtn.disabled=!0,this.showTyping();try{const t=await fetch(this.config.webhookUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:n,sessionId:this.sessionId,domain:this.config.domain})}),e=await t.json();setTimeout(()=>{this.hideTyping(),this.addMessage(e.output||"Je suis désolé, je n'ai pas pu traiter votre demande.",!0),this.isTyping=!1,this.sendBtn.disabled=!1},1e3)}catch(t){this.hideTyping(),this.addMessage("Désolé, une erreur s'est produite. Veuillez réessayer.",!0),this.isTyping=!1,this.sendBtn.disabled=!1}}}!function(){const e={init:async n=>{const e=new t(n);await e.init()}};"undefined"!=typeof window&&(window.ChatbotWidget=e),void 0!==n&&(n.ChatbotWidget=e),"function"==typeof window.define&&window.define.amd&&window.define([],function(){return e})}(),n.ChatbotWidget=t,Object.defineProperty(n,Symbol.toStringTag,{value:"Module"})}(this.ChatbotWidget=this.ChatbotWidget||{});
